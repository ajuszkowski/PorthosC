package mousquetaires.execution.events.old;

import java.util.HashSet;
import java.util.Set;

import com.microsoft.z3.*;

import mousquetaires.languages.internal.expressions.AExpr;
import mousquetaires.utils.MapSSA;
import static mousquetaires.utils.Utils.ssaReg;

public class Register extends AExpr {

    private String processName;
    private Integer mainThread;

    public Register(String processName) {
        this.processName = processName;
    }

    public String getName() {
        return processName;
    }

    public String toString() {
        return String.format("%s", processName);
        }

    public Register clone() {
        return this;
    }

    public void setMainThread(Integer t) {
        this.mainThread = t;
    }

    public ArithExpr toZ3(MapSSA map, Context ctx) {
        if(getMainThread() == null) {
            System.out.println(String.format("Check toZ3() for %s: null pointer!", this));
        }
        return (ArithExpr) ssaReg(this, map.get(this), ctx);
    }

    public Set<Register> getRegs() {
        HashSet<Register> setRegs = new HashSet<Register>();
        setRegs.add(this);
        return setRegs;
    }

    public Integer getMainThread() {
        return mainThread;
    }

}
