apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'antlr'
apply plugin: 'eclipse'
apply plugin: 'idea'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    flatDir {
        dirs 'lib'
    }
    jcenter()
    //mavenCentral()
}

dependencies {
    testCompile 'junit:junit:4.12'
    antlr "org.antlr:antlr4:4.7"
    compile "commons-cli:commons-cli:1.4"
    compile "commons-io:commons-io:2.5"

    // local dependencies:
    compile name: "com.microsoft.z3"
}

ext.antlr = [
    generatedSourceDir: "src/generated/java/",
    grammarsDir: "src/main/antlr/",
    resultPackage: "mousquetaires.languages.parsers",
]

mainClassName = "dartagnan.Dartagnan"

generateGrammarSource {
    arguments = (["-visitor", "-listener", "-package", antlr.resultPackage] + arguments)
    outputDirectory = file("${project.projectDir}/${antlr.generatedSourceDir}/${antlr.resultPackage.replaceAll("\\.", "/")}")
}

compileJava {
    dependsOn generateGrammarSource
    source "${project.projectDir}/${antlr.generatedSourceDir}"
    project.buildDir = 'out'
}

clean {
    delete += fileTree(antlr.generatedSourceDir).include('**/*')
}

task getHomeDir {
    println gradle.gradleHomeDir
}

task listJars() {
    project.configurations.compile.each { println it.path }
}

// For now, gradle allows running application in dummy

task runDartagnan(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'dartagnan.Dartagnan'
    if(project.hasProperty('args')){
        args project.args.split('\\s+')
    }
}

task runPorthos(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'porthos.Porthos'
    if(project.hasProperty('args')){
        args project.args.split('\\s+')
    }
}


